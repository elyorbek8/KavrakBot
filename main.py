import telebot
import buttons
import database
from telebot import types

bot = telebot.TeleBot('6733360508:AAGzdnGvr8nUJoC8T6TkJ2dan9idjzd8nEs')

admins = [5884034743]
def is_admin(user_id):
    return user_id in admins

users = {}

database.add_product('Kavrak', 250.000, 1000, 'o—Ä–≥–∞–Ω–∏–∑–º–≥–∞ –∫–æ–º–ø–ª–µ–∫—Å —Ç–∞—Ä–∑–¥–∞ —Ç–∞—ä—Å–∏—Ä “õ–∏–ª—É–≤—á–∏ –≤–æ—Å–∏—Ç–∞–¥–∏—Ä.', '')
@bot.message_handler(commands=['start'])
def start_message(message):
    user_id = message.from_user.id
    checker = database.check_user(user_id)

    if checker:
        products = database.get_pr_name_id()
        bot.send_message(user_id, '–ü—Ä–∏–≤–µ—Ç', reply_markup=buttons.main_menu_buttons())
        bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é', reply_markup=buttons.main_menu(products))
    elif not checker:
        bot.send_message(user_id, '–ü—Ä–∏–≤–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –∏–º—è')
        bot.register_next_step_handler(message, get_name)

def get_name(message):
    user_id = message.from_user.id
    username = message.text
    bot.send_message(user_id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é', reply_markup=buttons.geo_buttons())
    bot.register_next_step_handler(message, handle_location, username)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–∫–∞—Ü–∏–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
def handle_location(message, username):
    user_id = message.from_user.id
    if message.location:
        lat = message.location.latitude
        lon = message.location.longitude

        # –î–æ–±–∞–≤–∏–º –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        address = f"{lat}, {lon}"
        database.update_user_address(user_id, address)

        bot.send_message(user_id, f'–í–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è: {lat}, {lon}')
        bot.send_message(user_id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=buttons.number_buttons())
        bot.register_next_step_handler(message, get_number, username)
    else:
        bot.send_message(user_id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –ª–æ–∫–∞—Ü–∏—é', reply_markup=buttons.geo_buttons())
        bot.register_next_step_handler(message, handle_location, username)
def get_number(message, name):
    user_id = message.from_user.id

    if message.contact:
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
        phone_number = message.contact.phone_number


        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –±–∞–∑–µ
        database.register_user(user_id, name, phone_number, 'Not yet')
        bot.send_message(user_id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å {name}',
                         reply_markup=telebot.types.ReplyKeyboardRemove())

        bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é', reply_markup=buttons.main_menu_buttons())

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç
    elif not message.contact:
        bot.send_message(user_id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏', reply_markup=buttons.number_buttons())

        # –û–±—Ä–∞—Ç–Ω–æ –Ω–∞ —ç—Ç–∞–ø –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞
        bot.register_next_step_handler(message, get_number, name)

# –ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä
@bot.message_handler(func=lambda message: message.text == "–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Äüõç")
def show_pr(message):
    user_id = message.chat.id
    products = database.get_pr_name_id()
    bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä', reply_markup=buttons.products(products))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞‚ùì
@bot.message_handler(func=lambda message: message.text == "–ü–æ–¥–¥–µ—Ä–∂–∫–∞‚ùì")
def show_support(message):
    bot.send_message(message.chat.id, f"–ü–æ–¥–¥–µ—Ä–∂–∫–∞: @Elyorbek_2708")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
@bot.callback_query_handler(lambda call: call.data in ['plus', 'minus', 'to_cart', 'back'])
def get_user_product_count(call):
    # –°–æ—Ö—Ä–∞–Ω–∏–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = call.message.chat.id

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ +
    if call.data == 'plus':
        print(users)
        actual_count = users[user_id]['pr_count']
        print(actual_count)
        print(call)
        users[user_id]['pr_count'] += 1
        # –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        bot.edit_message_reply_markup(chat_id=user_id,
                                      message_id=call.message.message_id,
                                      reply_markup=buttons.choose_product_count('plus', actual_count))

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ -
    elif call.data == 'minus':
        print(users)
        actual_count = users[user_id]['pr_count']
        print(actual_count)
        print(call)
        users[user_id]['pr_count'] -= 1
        # –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        bot.edit_message_reply_markup(chat_id=user_id,
                                      message_id=call.message.message_id,
                                      reply_markup=buttons.choose_product_count('minus', actual_count))

    # back
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª '–Ω–∞–∑–∞–¥'
    elif call.data == 'back':
        # –ü–æ–ª—É—á–∞–µ–º –º–µ–Ω—é
        products = database.get_pr_name_id()
        # –º–µ–Ω—è–µ–º –Ω–∞ –º–µ–Ω—é
        bot.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é',
                              user_id,
                              call.message.message_id,
                              reply_markup=buttons.main_menu(products))

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
    elif call.data == 'to_cart':
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        product_count = users[user_id]['pr_count']
        user_product = users[user_id]['pr_name']
        print(users)
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É(–∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        database.add_product_to_cart(user_id, user_product, product_count)

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –º–µ–Ω—é
        products = database.get_pr_name_id()
        # –º–µ–Ω—è–µ–º –Ω–∞ –º–µ–Ω—é
        bot.edit_message_text('–ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É\n–ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ?',
                              user_id,
                              call.message.message_id,
                              reply_markup=buttons.main_menu(products))



@bot.callback_query_handler(lambda call: call.data in ['order', 'cart', 'clear_cart'])
def main_menu_handle(call):
    user_id = call.message.chat.id
    message_id = call.message.message_id

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É: –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
    if call.data == 'order':
        # –£–¥–∞–ª–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–µ—Ä—Ö–Ω–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        bot.delete_message(user_id, message_id)
        user_cart = database.get_exact_user_cart(user_id)

        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        full_text = '–í–∞—à –∑–∞–∫–∞–∑:\n\n'
        user_info = database.get_user_number_name(user_id)
        print(user_info)
        full_text += f'–ò–º—è: {user_info[0]}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_info[1]}\n\n'
        total_amount = 0

        for i in user_cart:
            full_text += f'{i[0]} x {i[1]} = {i[2]}\n'
            total_amount += i[2]

        # –ò—Ç–æ–≥ –∏ –ê–¥—Ä–µ—Å
        full_text += f'\n–ò—Ç–æ–≥: {total_amount}'

        bot.send_message(user_id, full_text, reply_markup=buttons.get_accept_kb())
        # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç—Ç–∞–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        bot.register_next_step_handler(call.message, get_accept,  full_text)

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö–æ—Ä–∑–∏–Ω–∞"
    elif call.data == 'cart':
        # –ø–æ–ª—É—á–∏–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_cart = database.get_exact_user_cart(user_id)

        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        full_text = '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n'
        total_amount = 0

        for i in user_cart:
            full_text += f'{i[0]} x {i[1]} = {i[2]}\n'
            total_amount += i[2]

        # –ò—Ç–æ–≥
        full_text += f'\n–ò—Ç–æ–≥: {total_amount}'

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.edit_message_text(full_text,
                              user_id,
                              message_id,
                              reply_markup=buttons.get_cart())

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –Ω–∞ –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
    elif call.data == 'clear_cart':
        # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
        database.delete_product_from_cart(user_id)

        # –æ—Ç–ø—Ä–∞–≤–∏–º –æ—Ç–≤–µ—Ç
        bot.edit_message_text('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞',
                              user_id,
                              message_id,
                              reply_markup=buttons.main_menu(database.get_pr_name_id()))




# –§—É–Ω–∫—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑

@bot.callback_query_handler(lambda call: call.data in ['accept_order', 'cancel_order'])
def handle_order_actions(call):
    user_id = call.message.chat.id


    if call.data == 'accept_order':
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç
        bot.send_message(user_id, '–∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.')


    elif call.data == 'cancel_order':
        bot.send_message(user_id, '–û—Ç–º–µ–Ω–∏–ª –∑–∞–∫–∞–∑ : –¢–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è')



# —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
def get_accept(message, full_text):
    user_id = message.from_user.id
    message_id = message.message_id
    user_answer = message.text

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_location = database.get_user_location(user_id)

    # –ø–æ–ª—É—á–∏–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –±–∞–∑—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
    products = database.get_pr_name_id()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    if user_answer == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        GROUP_CHAT_ID = -1002088545962
        # –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        database.delete_product_from_cart(user_id)

        # –æ—Ç–ø—Ä–∞–≤–∏–º –∞–¥–º–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
        bot.send_message(GROUP_CHAT_ID, full_text.replace("–í–∞—à", "–ù–æ–≤—ã–π"))

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ –∏ –ª–æ–∫–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        order_message = f"–û–§–û–†–ú–õ–ï–ù –ó–ê–ö–ê–ó\n{full_text}\n–õ–æ–∫–∞—Ü–∏—è: {user_location}"
        bot.send_message(GROUP_CHAT_ID, order_message, reply_markup=buttons.accept_or_cancel())

        # –æ—Ç–ø—Ä–∞–≤–∏–º –æ—Ç–≤–µ—Ç
        bot.send_message(user_id, '–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω', reply_markup=types.ReplyKeyboardRemove())

    elif user_answer == '–û—Ç–º–µ–Ω–∏—Ç—å':
        # –æ—Ç–ø—Ä–∞–≤–∏–º –æ—Ç–≤–µ—Ç
        bot.send_message(user_id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω', reply_markup=types.ReplyKeyboardRemove())

    # –û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é
    bot.send_message(user_id, '–ú–µ–Ω—é', reply_markup=buttons.main_menu(products))
    bot.send_message(user_id, '–ú–µ–Ω—é', reply_markup=buttons.main_menu_buttons())




        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
@bot.callback_query_handler(lambda call: int(call.data) in database.get_pr_id())
def get_user_product(call):
    # –°–æ—Ö—Ä–∞–Ω–∏–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = call.message.chat.id


    # –°–æ—Ö—Ä–∞–Ω–∏–º –ø—Ä–æ–¥—É–∫—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å
    # call.data - –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏(–∏–Ω–ª–∞–π–Ω)
    users[user_id] = {'pr_name': call.data, 'pr_count': 1, 'pr_photo': call.data}
    print(users)

    photo = open("path/to/your/photo.jpg", 'rb')
    bot.send_photo(user_id, photo, caption='–í–æ—Ç —Ç–æ–≤–∞—Ä, –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ', reply_markup=buttons.choose_product_count())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delete_product
@bot.message_handler(commands=['delete_product'])
def delete_product_handler(message):
    user_id = message.from_user.id

    if is_admin(user_id):
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:')
        bot.register_next_step_handler(message, delete_product_by_name)
    else:
        bot.send_message(user_id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
def delete_product_by_name(message):
    user_id = message.from_user.id
    product_name = message.text

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if database.get_product_by_name(product_name):
        # –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        database.delete_product(product_name)
        bot.send_message(user_id, '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!')
    else:
        bot.send_message(user_id, '–¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:')
        bot.register_next_step_handler(message, delete_product_by_name)

bot.infinity_polling()
